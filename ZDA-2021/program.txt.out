.586
.model flat, stdcall
includelib libucrt.lib
includelib kernel32.lib
includelib ../Debug/StaticLibrary.lib
EXTRN BREAKL: proc
EXTRN OutputInt: proc
EXTRN OutputStr: proc

.stack 4096

.const
	L1 SDWORD 0
	L2 SDWORD 10
	L3 SDWORD 1
	L4 BYTE "ok", 0
	L5 BYTE "not ok", 0
	L6 SDWORD 0
	L7 SDWORD 1
	L8 BYTE "123#123#123", 0
	L9 BYTE "контрольный       пример", 0

.data
	buffer BYTE 256 dup(0)
	fii SDWORD 0
	fibl SDWORD 0
	mainstr DWORD ?
	maina SDWORD 0
	mainb DWORD ?

.code

fi PROC fis : DWORD
	push L1
	pop fii
	mov eax, fii
	cmp eax, L2
	jl cycle0
	jmp cyclenext0
cycle0:
	push fii
	pop eax
	pop ebx
	add eax, ebx
	push eax
	push L3
	pop fii
	mov eax, fii
	cmp eax, L2
	jl cycle0
cyclenext0:
	mov eax, fibl
	cmp eax, 1
	jz m0
	jnz m1
	je m1
m0:
	push offset L4
	call OutputStr
	jmp e0
m1:
	push offset L5
	call OutputStr
e0:
	push L6
	pop fibl
	push L7
	pop fibl
	push fii
	jmp local0
local0:
	pop eax
	ret
fi ENDP

main PROC
	push offset L8
	pop mainstr
	push L3
	pop eax
	pop ebx
	add eax, ebx
	push eax
	push fi
	push mainb
	pop maina
	push offset L9
	call OutputStr
	call ExitProcess
main ENDP
end main